document.addEventListener("DOMContentLoaded", () => {
    const wordsToFind = ["FARM", "MEAT", "DAIRY", "GMO", "ETHICS", "WASTE", "GRAIN", "ANIMAL", "MARKET", "EXPORT"];
    const gridSize = 10;
    const gameBoard = document.getElementById("game-board");
    const wordList = document.getElementById("words");
    const message = document.getElementById("message");
    let selectedCells = [];
    let foundWords = new Set();

    wordsToFind.forEach(word => {
        const li = document.createElement("li");
        li.textContent = word;
        wordList.appendChild(li);
    });

    let grid = Array.from({ length: gridSize }, () => Array(gridSize).fill(""));

    function placeWord(word) {
        let placed = false;
        const directions = [
            { x: 1, y: 0 }, 
            { x: 0, y: 1 }, 
            { x: 1, y: 1 }, 
            { x: -1, y: 1 }
        ];

        while (!placed) {
            const row = Math.floor(Math.random() * gridSize);
            const col = Math.floor(Math.random() * gridSize);
            const direction = directions[Math.floor(Math.random() * directions.length)];
            let r = row, c = col;
            let valid = true;

            for (let i = 0; i < word.length; i++) {
                if (r < 0 || r >= gridSize || c < 0 || c >= gridSize || (grid[r][c] !== "" && grid[r][c] !== word[i])) {
                    valid = false;
                    break;
                }
                r += direction.y;
                c += direction.x;
            }

            if (valid) {
                r = row, c = col;
                for (let i = 0; i < word.length; i++) {
                    grid[r][c] = word[i];
                    r += direction.y;
                    c += direction.x;
                }
                placed = true;
            }
        }
    }

    wordsToFind.forEach(word => placeWord(word));

    for (let row = 0; row < gridSize; row++) {
        for (let col = 0; col < gridSize; col++) {
            if (grid[row][col] === "") {
                grid[row][col] = String.fromCharCode(65 + Math.floor(Math.random() * 26));
            }
        }
    }

    grid.forEach((row, rowIndex) => {
        row.forEach((letter, colIndex) => {
            const cell = document.createElement("div");
            cell.classList.add("cell");
            cell.textContent = letter;
            cell.dataset.row = rowIndex;
            cell.dataset.col = colIndex;
            gameBoard.appendChild(cell);
        });
    });

    document.querySelectorAll(".cell").forEach(cell => {
        cell.addEventListener("click", () => {
            if (cell.classList.contains("found")) return;

            cell.classList.toggle("selected");

            if (selectedCells.includes(cell)) {
                selectedCells = selectedCells.filter(c => c !== cell);
            } else {
                selectedCells.push(cell);
            }

            checkForWord();
        });
    });

    function checkForWord() {
        let selectedText = selectedCells.map(cell => cell.textContent).join("");
        let reversedText = selectedText.split("").reverse().join("");

        if (wordsToFind.includes(selectedText) || wordsToFind.includes(reversedText)) {
            selectedCells.forEach(cell => cell.classList.add("found"));
            foundWords.add(selectedText);
            selectedCells = [];
        }

        if (foundWords.size === wordsToFind.length) {
            message.textContent = "Congratulations! You found all the words!";
        }
    }
});
